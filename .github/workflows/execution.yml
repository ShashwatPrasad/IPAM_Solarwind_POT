# This is a basic workflow to help you get started with Actions

name: VM_IP_Update

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    paths:
    - 'IP_Ansible_file.yml'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: ls -lart

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          ansible-playbook IP_Ansible.yml
          echo "IP Fetched from IPAM"
          ansible-playbook IP_Ansible_file.yml
          echo "IP Modified on the VM Deplyment file, ready to execute"
          git config --local user.name "ShashwatPrasad"
          git add .  
          git commit -m all
          git push --force https://ShashwatPrasad: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@github.com/ShashwatPrasad/IPAM_Solarwind_POT.git 
          for UbuntuOSIPv4Address in $(curl 'https://api.ipify.org' -s); do echo $IP_shash; done
          
      # git result set
      
      - name: A/B Check
        if: $IP_shash != $IP_shash
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('envA and envB are equivalent!')
